<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd  
        ">  
        
    <bean id="env"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations"
			value="#{systemProperties['env.files'] ?: 'classpath:/conf/*.properties'}" />
		<property name="fileEncoding" value="UTF-8" ></property>
	</bean>
  
    <!-- 配置数据源 使用的是Druid数据源 -->  
   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        init-method="init" destroy-method="close"> 
       <property name="driverClassName" value="#{env['jdbcDriver']}" />
        <property name="url" value="#{env['url']}" />  
        <property name="username" value="#{env['username']}" />  
        <property name="password" value="#{env['password']}" />  
  
        <property name="initialSize" value="1" />  
        <property name="maxActive" value="30" />  
          
        <property name="minIdle" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="poolPreparedStatements" value="true" />  
        <property name="maxPoolPreparedStatementPerConnectionSize"  
            value="33" />  
        <property name="validationQuery" value="#{env['validationQuery']}" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="testWhileIdle" value="true" />  

        <property name="timeBetweenEvictionRunsMillis" value="60000" />  

        <property name="minEvictableIdleTimeMillis" value="25200000" />  

        <property name="removeAbandoned" value="true" />  

        <property name="removeAbandonedTimeout" value="1800" />  

        <property name="logAbandoned" value="true" />  

        <property name="filters" value="mergeStat" />  
    </bean> 
    
	
  
    <!-- myBatis文件 -->  
<!--     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        自动扫描entity目录, 省掉Configuration.xml里的手工配置  
        <property name="mapperLocations" value="classpath:com/cmpay/service/quartz/mapping/*.xml" />  
    </bean>  
  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cmpay.service.quartz.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean>  -->
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->  
        <property name="mapperLocations" value="classpath*:com/cmpay/service/**/mapping/*.xml" />  
    </bean>  
  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cmpay.service.**.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean> 
    
    
            <!-- myBatis文件 -->  
    <!-- <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        自动扫描entity目录, 省掉Configuration.xml里的手工配置  
        <property name="mapperLocations" value="classpath*:com/cmpay/weixin/mapping/*.xml" />  
    </bean>  
  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.cmpay.weixin.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1" />  
    </bean>    -->
  
    <!-- 配置事务管理器 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
    <!-- 注解方式配置事物 -->  
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->  
  
    <!-- 拦截器方式配置事物 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />  
  
        </tx:attributes>  
    </tx:advice>  
    <!-- Spring aop事务管理 -->  
    <aop:config>  
        <aop:pointcut id="transactionPointcut"  
            expression="execution(* com.cmpay.service.*.service..*Impl.*(..))" />  
        <aop:advisor pointcut-ref="transactionPointcut"  
            advice-ref="transactionAdvice" />  
    </aop:config>  
    
  
</beans>  